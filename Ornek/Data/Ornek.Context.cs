//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ornek.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OrnekEntities : DbContext
    {
        public OrnekEntities()
            : base("name=OrnekEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<Nullable<int>> usp_CategoryCopy(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_CategoryCopy", iDParameter);
        }
    
        public virtual int usp_CategoryDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CategoryDelete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_CategoryInsert(string title, string shortText, string description, Nullable<bool> active)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var shortTextParameter = shortText != null ?
                new ObjectParameter("ShortText", shortText) :
                new ObjectParameter("ShortText", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_CategoryInsert", titleParameter, shortTextParameter, descriptionParameter, activeParameter);
        }
    
        public virtual ObjectResult<usp_CategorySelect_Result> usp_CategorySelect(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CategorySelect_Result>("usp_CategorySelect", iDParameter);
        }
    
        public virtual ObjectResult<usp_CategorySelectAll_Result> usp_CategorySelectAll(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CategorySelectAll_Result>("usp_CategorySelectAll", iDParameter);
        }
    
        public virtual ObjectResult<usp_CategorySelectTop_Result> usp_CategorySelectTop(Nullable<int> iD, Nullable<int> top)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var topParameter = top.HasValue ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CategorySelectTop_Result>("usp_CategorySelectTop", iDParameter, topParameter);
        }
    
        public virtual ObjectResult<usp_CategoryUpdate_Result> usp_CategoryUpdate(Nullable<int> iD, string title, string shortText, string description, Nullable<bool> active)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var shortTextParameter = shortText != null ?
                new ObjectParameter("ShortText", shortText) :
                new ObjectParameter("ShortText", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CategoryUpdate_Result>("usp_CategoryUpdate", iDParameter, titleParameter, shortTextParameter, descriptionParameter, activeParameter);
        }
    
        public virtual ObjectResult<usp_Content_CategoryByLinkedIDSelect_Result> usp_Content_CategoryByLinkedIDSelect(Nullable<int> catID)
        {
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Content_CategoryByLinkedIDSelect_Result>("usp_Content_CategoryByLinkedIDSelect", catIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_ContentCopy(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_ContentCopy", iDParameter);
        }
    
        public virtual int usp_ContentDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ContentDelete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_ContentInsert(Nullable<int> catID, string title, string shortText, string description, Nullable<bool> active)
        {
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var shortTextParameter = shortText != null ?
                new ObjectParameter("ShortText", shortText) :
                new ObjectParameter("ShortText", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_ContentInsert", catIDParameter, titleParameter, shortTextParameter, descriptionParameter, activeParameter);
        }
    
        public virtual ObjectResult<usp_ContentLinkedSelect_Result> usp_ContentLinkedSelect(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ContentLinkedSelect_Result>("usp_ContentLinkedSelect", iDParameter);
        }
    
        public virtual ObjectResult<usp_ContentSelect_Result> usp_ContentSelect(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ContentSelect_Result>("usp_ContentSelect", iDParameter);
        }
    
        public virtual ObjectResult<usp_ContentSelectAll_Result> usp_ContentSelectAll(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ContentSelectAll_Result>("usp_ContentSelectAll", iDParameter);
        }
    
        public virtual ObjectResult<usp_ContentSelectTop_Result> usp_ContentSelectTop(Nullable<int> iD, Nullable<int> top)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var topParameter = top.HasValue ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ContentSelectTop_Result>("usp_ContentSelectTop", iDParameter, topParameter);
        }
    
        public virtual ObjectResult<usp_ContentUpdate_Result> usp_ContentUpdate(Nullable<int> iD, Nullable<int> catID, string title, string shortText, string description, Nullable<bool> active)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var shortTextParameter = shortText != null ?
                new ObjectParameter("ShortText", shortText) :
                new ObjectParameter("ShortText", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ContentUpdate_Result>("usp_ContentUpdate", iDParameter, catIDParameter, titleParameter, shortTextParameter, descriptionParameter, activeParameter);
        }
    }
}
